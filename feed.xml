<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>yhwanp&#39;s devNote</title>
    <link>https://yhwanp.github.io/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description>yhwanp&#39;s devNote</description>
    <pubDate>Sun, 01 Sep 2019 09:49:01 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>plink, pscp 로 SSH, SCP 써보기 (command-line, 자동화)</title>
      <link>https://yhwanp.github.io/2019/09/01/how-to-ssh-scp-with-command-line/</link>
      <guid>https://yhwanp.github.io/2019/09/01/how-to-ssh-scp-with-command-line/</guid>
      <pubDate>Sun, 01 Sep 2019 08:24:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;plink-pscp-어떻게-쓰면-좋을까&quot;&gt;&lt;a href=&quot;#plink-pscp-어떻게-쓰면-좋을까&quot; class=&quot;headerlink&quot; title=&quot;plink, pscp 어떻게 쓰면 좋을까?&quot;&gt;&lt;/a&gt;plink, pscp 어떻게 쓰면 좋을
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="plink-pscp-어떻게-쓰면-좋을까"><a href="#plink-pscp-어떻게-쓰면-좋을까" class="headerlink" title="plink, pscp 어떻게 쓰면 좋을까?"></a>plink, pscp 어떻게 쓰면 좋을까?</h2><p>회사에서 일을 할 때 <code>SSH</code> 나 <code>SCP</code> 등을 사용할 일이 많은데, 보통 아래와 같은 조합으로 사용했다.<br>SSH : TeraTerm, Putty, PowerShell<br>파일 전송 : FileZilla, WinSCP</p><p>위 프로그램들은 잘 사용하고 있었지만, 업무 상 반복적인 작업 들이 있었고 이를 위해 매번 같은 버튼 누르고, 같은  타이핑 하는 등.. 같은 action 을 반복하는 것이 귀찮았다.<br><em>ex) SSH password / 명령어 입력, 테스트를 위해 binary 교체 및 권한 설정 등..</em></p><p><code>plink</code>, <code>pscp</code> 는 이런 전송 반복적인 작업들을 피하기 위해 command-line 기반으로 어떻게 <code>자동화</code>를 할 수 있을 지 알아보다 발견한 툴이다.<br>이미 Putty 를 쓰고 있다면 Putty 에 포함되어 있는 프로그램이고, 다운로드 받고 싶다면 아래 링크에서 받을 수 있다.</p><p><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" rel="external nofollow noopener noreferrer" target="_blank">Download link</a><br><img src="image-20190901174340033.png" alt="Putty 전체를 받지 않고 plink, pscp 만 따로 받을 수도 있다."></p><p>그리고, 아래와 같이 사용하면 된다. 사용법도 간단하고 pw 를 지정할 수도 있어서 자동화할 때 좋다.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.11.10 의 host 로 접속해서 pwd 명령</span></span><br><span class="line">plink.exe -ssh -pw &lt;password&gt; host@<span class="number">192.168</span>.<span class="number">11.10</span> <span class="string">"pwd"</span></span><br><span class="line"><span class="comment"># 192.168.11.10 의 ~/dest 폴더로 example.txt 를 복사</span></span><br><span class="line">pscp.exe -scp -r -pw &lt;password&gt; example.txt host@<span class="number">192.168</span>.<span class="number">11.10</span>:~/dest</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/09/01/how-to-ssh-scp-with-command-line/#disqus_thread</comments>
    </item>
    
    <item>
      <title>일론 머스크의 뉴럴링크, 뇌와 컴퓨터의 연결</title>
      <link>https://yhwanp.github.io/2019/08/25/elon-musk-neuralink/</link>
      <guid>https://yhwanp.github.io/2019/08/25/elon-musk-neuralink/</guid>
      <pubDate>Sun, 25 Aug 2019 13:31:10 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;일론-머스크의-뉴럴링크에-대해-잘-설명된-유튜브-영상을-보자&quot;&gt;&lt;a href=&quot;#일론-머스크의-뉴럴링크에-대해-잘-설명된-유튜브-영상을-보자&quot; class=&quot;headerlink&quot; title=&quot;일론 머스크의 뉴럴링크에 대해 잘 설명된 유튜브
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="일론-머스크의-뉴럴링크에-대해-잘-설명된-유튜브-영상을-보자"><a href="#일론-머스크의-뉴럴링크에-대해-잘-설명된-유튜브-영상을-보자" class="headerlink" title="일론 머스크의 뉴럴링크에 대해 잘 설명된 유튜브 영상을 보자"></a>일론 머스크의 뉴럴링크에 대해 잘 설명된 유튜브 영상을 보자</h2><div class="video-container"><iframe src="//www.youtube.com/embed/bBSaxXEOQcM" frameborder="0" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="//www.youtube.com/embed/KezI_Lqnj5Q" frameborder="0" allowfullscreen></iframe></div><p>영상의 내용을 아주 간단하게 요약하자면, <code>뉴럴링크</code>란 뇌의 대뇌피질에 작은 칩을 연결해 뇌의 뉴런들이 전달하는 전자기적 신호를 <code>알고리즘</code>으로 분석해서 사람의 생각, 감각, 운동능력 등에 영향을 줄 수 있는 기술이다.<br>1차적으로 <code>파킨슨병</code> 같은 뇌 질환을 앓고 있는 환자들을 위해 사용될 것이고, 2020년 말에는 일반인들에게도 상용화가 될 것이라고 예상한다고 한다.</p><p>뉴럴링크가 상용화된다면, 이제 더 이상 <code>마우스</code>나 <code>키보드</code>, <code>모니터</code> 와 같은 뇌와 컴퓨터간의 <code>입력 매체</code> 및 <code>출력매체</code>가  필요 없어질 수 있다. 다양한 입력 매체의 도움없이도 훨씬 빠르게, 내가 <code>생각하는 속도</code>로 컴퓨터를 조작하고, 출력 매체가 없이도 얻고자 하는 정보를 뇌에 <code>주입</code> 시킬 수도 있는 것이다. 사람들은 인공지능 컴퓨터의 도움으로 현재보다 훨씬 많은 정보를 빠르고 쉽게 습득할 수 있을 것이다. </p><p>과연 2020년 말에는 생각만으로 상호작용을 하는 고도화된 인공지능 비서를 가질 수 있을까?<br><img src="ironman.jpg" alt="아이언맨도 음성인식으로 프라이데이와 통신하는데.."></p><p>아직은 전혀 실감이 나지 않지만 동물을 통한 실험도 어느정도 진행되었고 유의미한 성과를 이룬 것으로 보인다. 인간에게 적용되었을 때 안전성 / 보안성 문제만 해결된다면, <code>특이점</code>을 불러올 기술이라고 생각된다.<br><code>뉴럴링크</code>는 기존의 지식, 인프라를 무너뜨릴 수도 있을 것이다. 한편으론 내가 수년 간 쌓은 지식, 경험이 이 기술이 개발됨에 따라 남들이 쉽게 따라할 수 있다고 생각하면 당장 의욕이 떨어질 수도 있겠다. 하지만 이런 시대가 올 수 있다고 아직 장담할 수 없는 단계이고, 당장 할 수 있는 것도 없다. 그저 경각심을 가지고 현실을 열심히 살면 <code>뉴럴링크</code> 의 시대에도 내가 할 수 있는 것이 있을 것이라고 믿고, 준비해야 한다고 생각한다.</p>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/08/25/elon-musk-neuralink/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iTerm2 3.3 release 이후 Theme 변경 및 Status Bar 사용하기</title>
      <link>https://yhwanp.github.io/2019/08/22/iterm2-3-3-update/</link>
      <guid>https://yhwanp.github.io/2019/08/22/iterm2-3-3-update/</guid>
      <pubDate>Wed, 21 Aug 2019 16:36:27 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;새롭게-추가된-Minimal-Theme&quot;&gt;&lt;a href=&quot;#새롭게-추가된-Minimal-Theme&quot; class=&quot;headerlink&quot; title=&quot;새롭게 추가된 Minimal Theme&quot;&gt;&lt;/a&gt;새롭게 추가된 Minimal Theme&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="새롭게-추가된-Minimal-Theme"><a href="#새롭게-추가된-Minimal-Theme" class="headerlink" title="새롭게 추가된 Minimal Theme"></a>새롭게 추가된 Minimal Theme</h2><p><img src="https://user-images.githubusercontent.com/36141584/63451781-e9911180-c47f-11e9-98f5-32e2281a9f41.png" alt><br>하단의 Try it now 를 클릭하면 자동으로 변경됩니다. 이전 기본 테마보다 훨씬 깔끔하네요. 다시 이전 테마로 돌아가고 싶다면 Preferences - Appearance  에서 변경 할 수 있습니다.</p><h2 id="Status-Bar-표시"><a href="#Status-Bar-표시" class="headerlink" title="Status Bar 표시"></a>Status Bar 표시</h2><p><img src="https://user-images.githubusercontent.com/36141584/63452629-b64f8200-c481-11e9-99b9-800b6be28d8b.png" alt>status bar 는 개인설정이 가능합니다. 배터리, CPU, RAM 사용량, 네트워크 대역폭 등 여러 정보 및 Tool 을 status bar 에 설정할 수 있네요.<img src="https://user-images.githubusercontent.com/36141584/63452391-227db600-c481-11e9-870e-98e5c052694c.png" alt></p><h2 id="개인-설정까지-완료된-모습"><a href="#개인-설정까지-완료된-모습" class="headerlink" title="개인 설정까지 완료된 모습"></a>개인 설정까지 완료된 모습</h2><p><img src="https://user-images.githubusercontent.com/36141584/63452195-a3887d80-c480-11e9-8117-a20b645d7b4a.png" alt></p>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/08/22/iterm2-3-3-update/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CMake 에서 상대경로를 절대경로로 바꾸기</title>
      <link>https://yhwanp.github.io/2019/08/22/cmake-convert-to-absolute-path/</link>
      <guid>https://yhwanp.github.io/2019/08/22/cmake-convert-to-absolute-path/</guid>
      <pubDate>Wed, 21 Aug 2019 15:57:53 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;CMake-에서-상대경로를-절대경로로-바꿔보자&quot;&gt;&lt;a href=&quot;#CMake-에서-상대경로를-절대경로로-바꿔보자&quot; class=&quot;headerlink&quot; title=&quot;CMake 에서 상대경로를 절대경로로 바꿔보자&quot;&gt;&lt;/a&gt;CMake 에서 상대
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="CMake-에서-상대경로를-절대경로로-바꿔보자"><a href="#CMake-에서-상대경로를-절대경로로-바꿔보자" class="headerlink" title="CMake 에서 상대경로를 절대경로로 바꿔보자"></a>CMake 에서 상대경로를 절대경로로 바꿔보자</h2><blockquote><p>왜 필요한가?</p></blockquote><p><code>CMake</code> 에서 지원하는 여러 명령들 중에 상대 경로로 입력하면 오류가 출력되는 function 들이 있습니다.<br>이때, 상대 경로를 절대 경로로 변환하기 위해 <code>get_filename_component</code> 을 사용하면 됩니다.</p><p>원형:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get_filename_component</span>(&lt;var&gt; &lt;FileName&gt; &lt;mode&gt; [CACHE])</span><br></pre></td></tr></table></figure><p>아래는 ../../.. 에 해당하는 상대경로를 절대경로로 변환해서, MY_ABSOLUTE_PATH 라는 변수로 저장 시키는 예제 입니다.</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get_filename_component</span>(MY_ABSOLUTE_PATH <span class="string">"../../.."</span> ABSOLUTE)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/08/22/cmake-convert-to-absolute-path/#disqus_thread</comments>
    </item>
    
    <item>
      <title>OpenSSL을 NDK로 빌드하기</title>
      <link>https://yhwanp.github.io/2019/07/28/OpenSSL%EC%9D%84-NDK%EB%A1%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</link>
      <guid>https://yhwanp.github.io/2019/07/28/OpenSSL%EC%9D%84-NDK%EB%A1%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sun, 28 Jul 2019 10:02:06 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;시작에-앞서&quot;&gt;&lt;a href=&quot;#시작에-앞서&quot; class=&quot;headerlink&quot; title=&quot;시작에 앞서&quot;&gt;&lt;/a&gt;시작에 앞서&lt;/h2&gt;&lt;p&gt;보통 실습 용도나 로컬에서 테스트를 할 경우에는 &lt;code&gt;Precompiled library&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="시작에-앞서"><a href="#시작에-앞서" class="headerlink" title="시작에 앞서"></a>시작에 앞서</h2><p>보통 실습 용도나 로컬에서 테스트를 할 경우에는 <code>Precompiled library</code> 를 사용해도 되지만 상용 프로그램에 포함할 경우 <code>암호화 알고리즘 라이센스</code> 문제가 발생할 수 있습니다.<br>문제가 되는 암호화 알고리즘을 제외한 <code>Precompiled library</code> 가 있으면 해결되지만, 특정 <code>NDK</code>, <code>OpenSSL</code> 버전을 맞춰야 하는 경우 이에 만족하는 라이브러리를 찾기가 힘들어서, 직접 빌드하는 편이 빠릅니다.</p><h2 id="빌드-환경-및-사용-버전"><a href="#빌드-환경-및-사용-버전" class="headerlink" title="빌드 환경 및 사용 버전"></a>빌드 환경 및 사용 버전</h2><ol><li>NDK r18b</li><li>OpenSSL 1.0.2l</li><li>Ubuntu 18.04</li></ol><h2 id="빌드-시작하기"><a href="#빌드-시작하기" class="headerlink" title="빌드 시작하기"></a>빌드 시작하기</h2><ol><li><p>NDK 이용해 <code>custom toolchain</code> 생성</p><p>(<a href="https://developer.android.com/ndk/guides/standalone_toolchain" rel="external nofollow noopener noreferrer" target="_blank">https://developer.android.com/ndk/guides/standalone_toolchain</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 <span class="variable">$NDK</span>/build/tools/make_standalone_toolchain.py --arch arm64 --api 26 --install-dir /opt/android-26-arm64</span><br></pre></td></tr></table></figure></li><li><p>OpenSSL 폴더로 이동</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> openssl-1.0.2l</span><br></pre></td></tr></table></figure></li><li><p>Clang 에서 <code>&#39;-mandroid&#39;</code> 를 지원하지 않으므로 Configure 파일에서 해당 부분 삭제</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e <span class="string">'s/-mandroid//'</span> Configure</span><br></pre></td></tr></table></figure></li><li><p><code>Confiigure</code> 시작</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CROSS_COMPILE=/opt/android-26-arm64/bin/aarch64-linux-android- ./Configure android shared no-idea no-mdc2 no-rc5</span><br></pre></td></tr></table></figure></li><li><p><code>make</code> 시작</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make depend</span><br><span class="line">make ANDROID_DEV=/opt/android-26-arm64/sysroot/usr CALC_VERSIONS=<span class="string">"SHLIB_COMPAT=; SHLIB_SOVER="</span> build_libs</span><br></pre></td></tr></table></figure></li><li><p>생성된 library 가 올바르게 빌드 됐는지 확인</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readelf -h ./libcrypto.a | grep -i <span class="string">'class\|machine'</span> | head -2</span><br></pre></td></tr></table></figure></li></ol>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/07/28/OpenSSL%EC%9D%84-NDK%EB%A1%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 블로그 폰트 사이즈 수정하기 - (Hueman 테마)</title>
      <link>https://yhwanp.github.io/2019/07/28/Hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%B0%ED%8A%B8-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-Hueman-%ED%85%8C%EB%A7%88/</link>
      <guid>https://yhwanp.github.io/2019/07/28/Hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%B0%ED%8A%B8-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-Hueman-%ED%85%8C%EB%A7%88/</guid>
      <pubDate>Sun, 28 Jul 2019 09:17:21 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;블로그-게시글의-폰트-사이즈-수정하기-Hueman-Theme&quot;&gt;&lt;a href=&quot;#블로그-게시글의-폰트-사이즈-수정하기-Hueman-Theme&quot; class=&quot;headerlink&quot; title=&quot;블로그 게시글의 폰트 사이즈 수정하기 - (Hu
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="블로그-게시글의-폰트-사이즈-수정하기-Hueman-Theme"><a href="#블로그-게시글의-폰트-사이즈-수정하기-Hueman-Theme" class="headerlink" title="블로그 게시글의 폰트 사이즈 수정하기 - (Hueman Theme)"></a>블로그 게시글의 폰트 사이즈 수정하기 - (Hueman Theme)</h3><p>앞서 <a href="https://yhwanp.github.io/2019/07/27/Hexo-blog-setting/">Hexo-blog-셋팅-정리</a> 에서 소개한 블로그들에서 소개되지 않은 부분이 있는데, 바로 게시글의 폰트 사이즈를 수정하는 방법입니다.<br>기본 사이즈는 18px 로 설정되어 있는데, 미묘하게 큰 사이즈여서 포스트가 한 눈에 들어오지 않는 것 같아 사이즈를 수정했습니다.</p><p>수정하기 위해서 <code>/$HEXO_HOME/themes/hueman/source/css/_variables.styl</code> 파일을 엽니다.<br>그리고, <code>font-size-article</code> 을 찾아서 원하는 사이즈로 수정합니다.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//font-size-article = 18px</span></span><br><span class="line"><span class="attribute">font-size</span>-article = <span class="number">17px</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/07/28/Hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%B0%ED%8A%B8-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-Hueman-%ED%85%8C%EB%A7%88/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 블로그 셋팅 총정리</title>
      <link>https://yhwanp.github.io/2019/07/27/Hexo-blog-setting/</link>
      <guid>https://yhwanp.github.io/2019/07/27/Hexo-blog-setting/</guid>
      <pubDate>Sat, 27 Jul 2019 12:30:51 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Hexo-블로그-만들기&quot;&gt;&lt;a href=&quot;#Hexo-블로그-만들기&quot; class=&quot;headerlink&quot; title=&quot;Hexo 블로그 만들기&quot;&gt;&lt;/a&gt;Hexo 블로그 만들기&lt;/h2&gt;&lt;p&gt;hexo 블로그를 만들기 위해 참고했던 사이트를 정리해
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="Hexo-블로그-만들기"><a href="#Hexo-블로그-만들기" class="headerlink" title="Hexo 블로그 만들기"></a>Hexo 블로그 만들기</h2><p>hexo 블로그를 만들기 위해 참고했던 사이트를 정리해보려 합니다.<br>아래에 있는 블로그만 참조해도 꽤 괜찮은 블로그를 만들 수 있습니다.<br>그 중에서도 <code>Eric Han</code> 님의 블로그의 글이 포스팅 된 지 가장 오래된 글임에도 많은 도움이 됐습니다.</p><h4 id="튜토리얼-with-Hueman-테마"><a href="#튜토리얼-with-Hueman-테마" class="headerlink" title="튜토리얼 with Hueman 테마"></a>튜토리얼 with Hueman 테마</h4><p><a href="https://futurecreator.github.io/categories/Hexo/" rel="external nofollow noopener noreferrer" target="_blank">Eric Han’s IT Blog Powered by Hexo</a><br><a href="https://d2fault.github.io/categories/Blog/Hexo/" rel="external nofollow noopener noreferrer" target="_blank">d2fault</a></p><h4 id="튜토리얼-with-Tranquilpeak-테마"><a href="#튜토리얼-with-Tranquilpeak-테마" class="headerlink" title="튜토리얼 with Tranquilpeak 테마"></a>튜토리얼 with Tranquilpeak 테마</h4><p><a href="https://mingpd.github.io/categories/개발/hexo/" rel="external nofollow noopener noreferrer" target="_blank">밍피디</a></p><h4 id="Markdown-문법"><a href="#Markdown-문법" class="headerlink" title="Markdown 문법"></a>Markdown 문법</h4><p><a href="https://heropy.blog/2017/09/30/markdown/" rel="external nofollow noopener noreferrer" target="_blank">MarkDown 사용법 총정리</a></p><hr><p>####Tag 나 Category 에서 404 error 해결법</p><p>링크에 대해선 대-소문자 구분 없이 통일하는 법<br><a href="https://postlude.github.io/2019/01/21/hexo-category-not-found/" rel="external nofollow noopener noreferrer" target="_blank">Hexo 블로그에서 카테고리(태그)가 제대로 보이지 않을 때</a></p>]]></content:encoded>
      
      <comments>https://yhwanp.github.io/2019/07/27/Hexo-blog-setting/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
